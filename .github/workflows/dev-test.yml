name: Docker Compose Test

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  dev-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Проверка репозитория
        uses: actions/checkout@v3
      
      - name: Настройка Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Создание .env файла через make и проверка
        run: |
          make prepare-debian
          cat .env
      
      - name: Проверка env-данных в контейнерах
        run: docker compose -f docker-compose.dev.yml config
      
      - name: Сборка контейнеров
        run: docker compose -f docker-compose.dev.yml build
      
      - name: Запуск контейнеров
        run: |
          docker compose -f docker-compose.dev.yml up -d
          echo "Даем время на запуск всех сервисов в контейнерах"
          sleep 20  
      
      - name: Проверка статуса контейнеров
        run: |
          docker compose -f docker-compose.dev.yml ps
          
          echo "Проверяем, что все контейнеры запущены"
          if [ $(docker compose -f docker-compose.dev.yml ps -q | wc -l) -ne $(docker compose -f docker-compose.dev.yml config --services | wc -l) ]; then
            echo "Не все контейнеры запущены!"
            docker compose -f docker-compose.dev.yml logs
            exit 1
          fi
      
      - name: Проверка доступности сервисов
        run: |
          echo "Проверка доступности бэкенда"
          docker compose -f docker-compose.dev.yml exec -T backend curl --retry 5 --retry-delay 5 --retry-connrefused http://localhost:3005/
          
          echo "Проверка доступности MongoDB"
          docker compose -f docker-compose.dev.yml exec -T mongo mongosh --eval "db.runCommand({ping:1})" --quiet
      
      - name: Остановка контейнеров
        run: docker compose -f docker-compose.dev.yml down
        if: always()  # Выполнять всегда, даже если предыдущие шаги завершились с ошибкой

  dev-update:
    runs-on: ubuntu-latest
    # Запускается только если предыдущий workflow был успешным
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Настройка SSH ключа
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Добавление сервера в known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          
      - name: Обновление репозитория на сервере
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ${{ secrets.PROJECT_PATH_DEV }} && git reset --hard && git pull origin dev"
          
      # - name: Проверка статуса после обновления
      #   run: |
      #     ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ${{ secrets.PROJECT_PATH_DEV }} && docker compose -f docker-compose.dev.yml ps"