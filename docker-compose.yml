services:

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    env_file:
      - ./backend/.env
#   MongoDB env's listed in ./backend/.env 
#   Docker compose automatically pick up it from there:
#     MONGO_INITDB_ROOT_USERNAME
#     MONGO_INITDB_ROOT_PASSWORD
#     MONGO_INITDB_DATABASE
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  caddy:
    image: caddy:latest
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile"
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
    depends_on:
      - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # Disable access from localhost. Use Caddy instead
    # ports:
    #   - "8080:8080"
    expose:
      - 8080
    command: npm run start
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 3005
    command: node app.js
    networks:
      - app-network

volumes:
  mongo-data:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge
